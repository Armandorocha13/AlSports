#!/usr/bin/env node

/**
 * Script para corrigir caminhos espec√≠ficos das imagens de futebol
 */

const fs = require('fs');
const path = require('path');

const productsFile = 'lib/data/products-futebol.ts';

// Mapeamento espec√≠fico de corre√ß√µes baseado nos arquivos dispon√≠veis
const specificCorrections = {
  // CamisaJogador - PNG dispon√≠vel
  '/images/Futebol/CamisaJogador/FlamengoJogador.jpg': '/images/Futebol/CamisaJogador/FlamengoJogador.png',
  '/images/Futebol/CamisaJogador/CamisaJogadorInglaterra.jpg': '/images/Futebol/CamisaJogador/(G).png',
  
  // CamisasFutebolRetro - PNG dispon√≠vel
  '/images/Futebol/CamisasFutebolRetro/Flamengo2009.jpg': '/images/Futebol/CamisasFutebolRetro/Flamengo2009.png',
  '/images/Futebol/CamisasFutebolRetro/Parma95.jpg': '/images/Futebol/CamisasFutebolRetro/Parma95.png',
  '/images/Futebol/CamisasFutebolRetro/Brasil2018.jpg': '/images/Futebol/CamisasFutebolRetro/Brasil2018.png',
  '/images/Futebol/CamisasFutebolRetro/Brasil2019.jpg': '/images/Futebol/CamisasFutebolRetro/Brasil2019.png',
  '/images/Futebol/CamisasFutebolRetro/Brasil94.jpg': '/images/Futebol/CamisasFutebolRetro/Brasil94.png',
  '/images/Futebol/CamisasFutebolRetro/BrasilRetro.jpg': '/images/Futebol/CamisasFutebolRetro/BrasilRetro.png',
  '/images/Futebol/CamisasFutebolRetro/BrasilTreino2011.jpg': '/images/Futebol/CamisasFutebolRetro/BrasilTreino2011.png',
  '/images/Futebol/CamisasFutebolRetro/ManUnited2021.jpg': '/images/Futebol/CamisasFutebolRetro/ManUnited2021.png',
  '/images/Futebol/CamisasFutebolRetro/ManUnited2022.jpg': '/images/Futebol/CamisasFutebolRetro/ManUnited2022.png',
  '/images/Futebol/CamisasFutebolRetro/PSG2021Camisa2.jpg': '/images/Futebol/CamisasFutebolRetro/PSG2021Camisa2.png',
  
  // CamisasFutebolRegatas - PNG dispon√≠vel
  '/images/Futebol/CamisasFutebolRegatas/RegataFlamengoTreino.jpg': '/images/Futebol/CamisasFutebolRegatas/RegataFlamengoTreino.png',
  
  // CamisasFutebolFeminina - PNG dispon√≠vel
  '/images/Futebol/CamisasFutebolFeminina/FluminensePatchFeminio3.jpg': '/images/Futebol/CamisasFutebolFeminina/FluminensePatchFeminio3.png',
  
  // ShortsFutebolMasculino - PNG dispon√≠vel
  '/images/Futebol/ShortsFutebolMasculino/ShortFlamengo1.jpg': '/images/Futebol/ShortsFutebolMasculino/ShortFlamengo1.png',
  '/images/Futebol/ShortsFutebolMasculino/ShortFlamengo2.jpg': '/images/Futebol/ShortsFutebolMasculino/ShortFlamengo2.png',
  '/images/Futebol/ShortsFutebolMasculino/ShortFlamengoTreino.jpg': '/images/Futebol/ShortsFutebolMasculino/ShortFlamengoTreino.png',
  
  // Camisas25-26 - PNG/WEBP dispon√≠vel
  '/images/Futebol/Camisas25-26/Arsenal25-26.jpg': '/images/Futebol/Camisas25-26/Arsenal25-26.webp',
  '/images/Futebol/Camisas25-26/Barcelona25-26.jpg': '/images/Futebol/Camisas25-26/Barcelona25-26.png',
  '/images/Futebol/Camisas25-26/Bayer25-26.jpg': '/images/Futebol/Camisas25-26/Bayer25-26.png',
  '/images/Futebol/Camisas25-26/Chelsea25-26.jpg': '/images/Futebol/Camisas25-26/Chelsea25-26.png',
  
  // Camisas24-25 - PNG dispon√≠vel
  '/images/Futebol/Camisas24-25/BrasilComemorativa24-25.jpg': '/images/Futebol/Camisas24-25/BrasilComemorativa24-25.png'
};

/**
 * Aplica as corre√ß√µes espec√≠ficas
 */
function applySpecificCorrections() {
  console.log('üîß Aplicando corre√ß√µes espec√≠ficas...');
  
  let content = fs.readFileSync(productsFile, 'utf8');
  let correctedCount = 0;
  
  // Aplicar cada corre√ß√£o
  Object.entries(specificCorrections).forEach(([oldPath, newPath]) => {
    const oldPattern = `image: '${oldPath}'`;
    const newPattern = `image: '${newPath}'`;
    
    if (content.includes(oldPattern)) {
      console.log(`‚úÖ Corrigindo: ${oldPath} -> ${newPath}`);
      content = content.replace(oldPattern, newPattern);
      correctedCount++;
    }
  });
  
  // Salvar arquivo atualizado
  if (correctedCount > 0) {
    fs.writeFileSync(productsFile, content);
    console.log(`üìù ${correctedCount} caminhos corrigidos`);
  } else {
    console.log('‚ÑπÔ∏è  Nenhuma corre√ß√£o necess√°ria');
  }
  
  return correctedCount;
}

/**
 * Verifica se todos os caminhos est√£o corretos
 */
function verifyAllPaths() {
  console.log('\nüîç Verificando todos os caminhos ap√≥s corre√ß√£o...');
  
  const content = fs.readFileSync(productsFile, 'utf8');
  const regex = /image:\s*['"`]([^'"`]+)['"`]/g;
  let match;
  let foundCount = 0;
  let notFoundCount = 0;
  
  while ((match = regex.exec(content)) !== null) {
    if (match[1].includes('/images/Futebol/')) {
      const fullPath = path.join('public', match[1]);
      if (fs.existsSync(fullPath)) {
        foundCount++;
        console.log(`‚úÖ ${match[1]}`);
      } else {
        notFoundCount++;
        console.log(`‚ùå ${match[1]}`);
      }
    }
  }
  
  console.log(`\nüìä Resultado: ${foundCount} encontrados, ${notFoundCount} n√£o encontrados`);
  return { foundCount, notFoundCount };
}

/**
 * Fun√ß√£o principal
 */
function main() {
  console.log('üîß Corrigindo caminhos espec√≠ficos das imagens de futebol...');
  console.log(`üìÑ Arquivo: ${productsFile}`);
  console.log('-'.repeat(60));

  if (!fs.existsSync(productsFile)) {
    console.log(`‚ùå Arquivo n√£o encontrado: ${productsFile}`);
    return;
  }

  // Fazer backup
  const backupFile = productsFile + '.backup_specific_fix';
  fs.copyFileSync(productsFile, backupFile);
  console.log(`üì¶ Backup criado: ${backupFile}`);

  // Aplicar corre√ß√µes
  const correctedCount = applySpecificCorrections();
  
  // Verificar resultado
  const result = verifyAllPaths();

  console.log('\n' + '-'.repeat(60));
  console.log('‚úÖ Corre√ß√£o espec√≠fica conclu√≠da!');
  console.log(`üìä Caminhos corrigidos: ${correctedCount}`);
  console.log(`‚úÖ Arquivos encontrados: ${result.foundCount}`);
  console.log(`‚ùå Arquivos n√£o encontrados: ${result.notFoundCount}`);
  
  if (result.notFoundCount === 0) {
    console.log('üéâ Todos os caminhos est√£o corretos!');
  } else {
    console.log('‚ö†Ô∏è  Alguns arquivos ainda n√£o foram encontrados.');
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  main();
}

module.exports = { applySpecificCorrections, verifyAllPaths };
